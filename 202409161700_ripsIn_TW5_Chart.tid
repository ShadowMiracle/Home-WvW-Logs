created: 20240916170010
creator: Drevarr
tags: ChartData
title: 202409161700_ripsIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Undeadunwanted", "Emi Takei", "Klee Saria", "Gimmeboo", "Death By Hab\u00f6\u00f6b", "Kwhaenor", "Zelllfurion", "Q T Kitty", "Fluidra", "Ren Guarden", "Arty Tesla", "Dext\u00e9r\u00edty", "Assassin Stryke", "Persephone Reaver", "Keeper Of The Night", "Xaden Rior Son", "Blind Anomoly", "Asteria Reaver", "Samwrench", "Sophia Shae", "Sung Tsu Tao", "Pathetic Pug", "Best Sell By", "Gran Chariot", "Peeradon Yamsonthor", "Ometsuki", "Snapc\u00e4ster", "Nentan", "D\u00e8j\u00e1vu", "Hitmonpanda", "Triss Azathenai", "Lostarra Yiil", "Vasorvi", "Feng Yang Choy", "Queen Jellybean", "Darwyn D Fuego", "Snake Bloodgoose", "Goose Lee", "Basil Huss", "Akenansi", "Goose Spr\u00edngsteen", "Harold Baulszak", "Nightmare Crone", "The Beanpole", "Katrina Riker", "Goose Daddy Rivan", "Rekian", "Harmoney Rae", "Goose Willis"];
const professions = ["Reaper", "Dragonhunter", "Holosmith", "Willbender", "Reaper", "Scourge", "Scrapper", "Spellbreaker", "Tempest", "Firebrand", "Holosmith", "Soulbeast", "Daredevil", "Scourge", "Harbinger", "Herald", "Renegade", "Firebrand", "Scrapper", "Tempest", "Catalyst", "Warrior", "Reaper", "Firebrand", "Holosmith", "Spellbreaker", "Tempest", "Firebrand", "Druid", "Spellbreaker", "Druid", "Spellbreaker", "Harbinger", "Mechanist", "Tempest", "Druid", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Scourge", "Herald", "Reaper", "Reaper", "Firebrand", "Berserker", "Scrapper", "Scourge", "Herald"];
const ProfessionColor = {"Warrior": "#FF9933", "Berserker": "#FFA750", "Spellbreaker": "#FFB66D", "Bladesworn": "#FFC48A", "Guardian": "#3399cc", "Dragonhunter": "#50A7D3", "Firebrand": "#6DB6DA", "Willbender": "#8AC4E1", "Revenant": "#CC6342", "Herald": "#D3795D", "Renegade": "#DA8F78", "Vindicator": "#E1A593", "Engineer": "#996633", "Scrapper": "#A77B50", "Holosmith": "#B6916D", "Mechanist": "#C4A78A", "Ranger": "#66CC33", "Druid": "#7BD350", "Soulbeast": "#91DA6D", "Untamed": "#A7E18A", "Thief": "#CC6666", "Daredevil": "#D37B7B", "Deadeye": "#DA9191", "Specter": "#E1A7A7", "Elementalist": "#EC5752", "Tempest": "#EE6F6A", "Weaver": "#F18783", "Catalyst": "#F49F9C", "Mesmer": "#993399", "Chronomancer": "#A750A7", "Mirage": "#B66DB6", "Virtuoso": "#C48AC4", "Necromancer": "#339966", "Reaper": "#50A77B", "Scourge": "#6DB691", "Harbinger": "#8AC4A7"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Boon Strips Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.1111, 0.0, 0.0, 0.169], [0.0317, 0.0, 0.0, 0.2535], [0.0519, 0.0242], [0.0492, 0.058, 0.1549], [0.0367, 0.1884], [0.0688], [0.0, 0.0704, 0.0, 0.0091], [0.0519, 0.0, 0.0709], [0.0952, 0.025, 0.0, 0.2254], [0.0476, 0.0, 0.0, 0.2817], [0.0875, 0.0], [0.0906], [0.0, 0.0242, 0.1348, 0.0164, 0.0, 0.0], [0.0433, 0.0665, 0.0], [0.125, 0.0, 0.0281, 0.0667], [0.1222], [0.0, 0.0332, 0.1702], [0.0531, 0.0741], [0.0252, 0.061, 0.0, 0.0, 0.0, 0.0, 0.0377, 0.0, 0.1412, 0.0281, 0.0, 0.0, 0.0, 0.0, 0.0164, 0.029, 0.0141], [0.0, 0.0242, 0.1418, 0.0492, 0.0, 0.0986], [0.0286, 0.058, 0.35, 0.0174, 0.022, 0.0244, 0.0465, 0.0, 0.0169, 0.0, 0.0], [0.0824, 0.1094], [0.141, 0.113, 0.0, 0.3019], [0.0815, 0.0, 0.0574, 0.0496], [0.1698, 0.0, 0.0706, 0.1187], [0.0815, 0.0346, 0.0755], [0.013, 0.0453, 0.1135, 0.0328, 0.1014, 0.1408], [0.2558, 0.1538, 0.1186, 0.25, 0.1698], [0.0952, 0.0, 0.0, 0.0694, 0.1159, 0.175, 0.0872, 0.0346, 0.1341], [0.0893, 0.3585, 0.0, 0.0471, 0.1562], [0.0159, 0.0, 0.0, 0.0986, 0.0476, 0.0665, 0.1277, 0.0164, 0.1159, 0.1549], [0.1437, 0.1519], [0.0, 0.0, 0.0488, 0.0, 0.141, 0.0282, 0.0536, 0.0, 0.0, 0.0, 0.0906, 0.0148, 0.0, 0.006, 0.0922, 0.0246, 0.1884, 0.0423], [0.0, 0.0941, 0.1219, 0.0926, 0.0043, 0.0272, 0.1277, 0.0656, 0.087, 0.0704], [0.0, 0.1538, 0.1582, 0.0357, 0.2264, 0.0, 0.0, 0.1062, 0.0926, 0.0216, 0.0785, 0.0213, 0.0574, 0.2029, 0.2113], [0.0635, 0.0, 0.0, 0.0563, 0.0408, 0.1304, 0.375, 0.0233, 0.0314, 0.1585, 0.5814, 0.1282, 0.0847, 0.1607, 0.1887, 0.0, 0.0941, 0.1187, 0.0889], [0.0163, 0.2029, 0.275, 0.0465, 0.0314, 0.061, 0.3721, 0.2179, 0.1017, 0.1071, 0.2453, 0.0, 0.0706, 0.0969, 0.0704, 0.013, 0.0242, 0.1986, 0.0738, 0.1159, 0.1268], [0.0, 0.0, 0.0167, 0.0563, 0.0408, 0.029, 0.225, 0.064, 0.0566, 0.0732, 0.3953, 0.1282, 0.0621, 0.1786, 0.3396, 0.0, 0.2, 0.1313, 0.0926, 0.0, 0.0544, 0.0922, 0.0246, 0.029, 0.0704], [0.0435, 0.0174, 0.0503, 0.1585, 0.0465, 0.1923, 0.0734, 0.4286, 0.2264, 0.0, 0.2706, 0.1187, 0.0889, 0.039, 0.0363, 0.0993, 0.0574, 0.1449, 0.1972], [0.0531, 0.1304, 0.425, 0.0407, 0.0409, 0.1341, 0.186, 0.1667, 0.1356, 0.1607, 0.1698, 0.0, 0.1412, 0.1219, 0.1, 0.026, 0.0211, 0.0142, 0.0574, 0.1304, 0.1831], [0.0735, 0.2174, 0.5, 0.0523, 0.0377, 0.2073, 0.4186, 0.2436, 0.2599, 0.2679, 0.1887, 0.0, 0.1765, 0.1375], [0.0286, 0.1014, 0.325, 0.0116, 0.0629, 0.2317, 0.2791, 0.1026, 0.1751, 0.1429, 0.1321, 0.0, 0.0, 0.1469, 0.1296, 0.039, 0.0211, 0.1135, 0.0164, 0.058, 0.0563], [0.0327, 0.058, 0.2, 0.0233, 0.0377, 0.0854, 0.7209, 0.2949, 0.1638, 0.0179, 0.0943, 0.0, 0.0824, 0.1313, 0.063, 0.026, 0.0755, 0.0496, 0.123, 0.0145, 0.1549], [0.1746, 0.0, 0.0167, 0.1831, 0.0245, 0.087, 0.175, 0.0756, 0.0409, 0.2317, 0.186, 0.2436, 0.1582, 0.0714, 0.1887, 0.0, 0.0941, 0.1313, 0.0556, 0.0043, 0.0483, 0.0709, 0.0328, 0.0725, 0.1408], [0.0531, 0.1304, 0.25, 0.1047, 0.0472, 0.1951, 0.1628, 0.141, 0.1469, 0.1786, 0.2642, 0.0833, 0.0, 0.1594, 0.0852, 0.0043, 0.0483, 0.1277, 0.0738, 0.1014, 0.2113], [0.0635, 0.075, 0.0, 0.2535, 0.525, 0.0174, 0.0629, 0.1707, 0.5814, 0.2308, 0.0791, 0.0536, 0.434, 0.0, 0.1647, 0.1437, 0.0963, 0.0087, 0.0785, 0.1348, 0.082, 0.1739, 0.2394], [0.0408, 0.0725, 0.5, 0.1337, 0.0252, 0.3049, 0.2791, 0.141, 0.1073, 0.2143, 0.1698, 0.0, 0.0706, 0.2156, 0.1148, 0.0087, 0.0604, 0.1206, 0.1393, 0.1884, 0.1408], [0.0408, 0.1594, 0.225, 0.0581, 0.0849, 0.4146, 0.3953, 0.1795, 0.1921, 0.0714, 0.3019, 0.0, 0.1882, 0.1906, 0.063, 0.0, 0.0695, 0.1277, 0.0738, 0.1449, 0.1549], [0.0159, 0.0, 0.0167, 0.169, 0.0653, 0.2029, 0.325, 0.093, 0.0692, 0.4512, 0.6279, 0.0769, 0.1695, 0.1607, 0.4717, 0.0, 0.1059, 0.1688, 0.0444, 0.0216, 0.0755, 0.0922, 0.0902, 0.087, 0.0986]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

