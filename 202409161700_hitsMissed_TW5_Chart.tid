created: 20240916170010
creator: Drevarr
tags: ChartData
title: 202409161700_hitsMissed_ChartData
type: text/vnd.tiddlywiki


const names = ["Fluidra", "Mungdeath", "Beefer Sutherlands", "Geese Witherspoon", "Hur E Kane", "Stabibitty", "Wvwol", "Marek Severyn", "Basil Huss", "Samwrench", "Kaotic Reaper X", "Troy Sivan", "Sung Tsu Tao", "Peeradon Yamsonthor", "Asteria Reaver", "Zelllfurion", "Assassin Stryke", "Snake Bloodgood", "Ren Guarden", "Ometsuki", "Olivia Sorrows", "Tater Tilly", "Comedylost", "Emi Takei", "Death By Hab\u00f6\u00f6b", "Pathetic Pug", "Lady Of The Thistle", "Lostarra Yiil", "Blind Anomoly", "Persephone Reaver", "Orang Tango", "Gimmeboo", "Best Sell By", "Keeper Of The Night", "Gran Chariot", "Snapc\u00e4ster", "Sophia Shae", "D\u00e8j\u00e1vu", "Hitmonpanda", "Nentan", "Vasorvi", "Triss Azathenai", "Feng Yang Choy", "Darwyn D Fuego", "Basil Huss", "Queen Jellybean", "Goose Lee", "Snake Bloodgoose", "Akenansi", "Harold Baulszak", "Katrina Riker", "Goose Spr\u00edngsteen", "Goose Daddy Rivan", "Nightmare Crone", "The Beanpole", "Rekian", "Harmoney Rae", "Goose Willis"];
const professions = ["Tempest", "Scourge", "Scrapper", "Weaver", "Scourge", "Firebrand", "Herald", "Scourge", "Willbender", "Scrapper", "Druid", "Herald", "Catalyst", "Holosmith", "Firebrand", "Scrapper", "Daredevil", "Firebrand", "Firebrand", "Spellbreaker", "Scourge", "Tempest", "Mirage", "Dragonhunter", "Reaper", "Warrior", "Scourge", "Spellbreaker", "Renegade", "Scourge", "Spellbreaker", "Willbender", "Reaper", "Harbinger", "Firebrand", "Tempest", "Tempest", "Druid", "Spellbreaker", "Firebrand", "Harbinger", "Druid", "Mechanist", "Druid", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Scrapper", "Herald", "Firebrand", "Scourge", "Berserker", "Reaper", "Reaper", "Scrapper", "Scourge", "Herald"];
const ProfessionColor = {"Warrior": "#FF9933", "Berserker": "#FFA750", "Spellbreaker": "#FFB66D", "Bladesworn": "#FFC48A", "Guardian": "#3399cc", "Dragonhunter": "#50A7D3", "Firebrand": "#6DB6DA", "Willbender": "#8AC4E1", "Revenant": "#CC6342", "Herald": "#D3795D", "Renegade": "#DA8F78", "Vindicator": "#E1A593", "Engineer": "#996633", "Scrapper": "#A77B50", "Holosmith": "#B6916D", "Mechanist": "#C4A78A", "Ranger": "#66CC33", "Druid": "#7BD350", "Soulbeast": "#91DA6D", "Untamed": "#A7E18A", "Thief": "#CC6666", "Daredevil": "#D37B7B", "Deadeye": "#DA9191", "Specter": "#E1A7A7", "Elementalist": "#EC5752", "Tempest": "#EE6F6A", "Weaver": "#F18783", "Catalyst": "#F49F9C", "Mesmer": "#993399", "Chronomancer": "#A750A7", "Mirage": "#B66DB6", "Virtuoso": "#C48AC4", "Necromancer": "#339966", "Reaper": "#50A77B", "Scourge": "#6DB691", "Harbinger": "#8AC4A7"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Hits Missed Against per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2, 0, 0, 4], [2, 0, 0, 4], [0, 0, 1, 5], [3, 0, 0, 3], [1, 0, 1, 4], [1, 0, 0, 5], [4, 0, 1, 1], [0, 0, 1, 5], [4, 2], [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0], [5, 0, 1, 1], [0, 0, 1, 6], [2, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0], [2, 0, 3, 2], [5, 2], [0, 3, 1, 3], [1, 0, 5, 0, 2, 0], [3, 0, 1, 5], [0, 2, 1, 6], [3, 0, 6], [2, 0, 3, 5], [0, 0, 5, 5], [3, 0, 3, 4], [2, 0, 0, 9], [10, 1], [2, 9], [0, 12], [9, 4], [1, 11, 1], [1, 12, 0], [7, 0, 0, 7], [8, 4, 2], [5, 8, 0, 2], [1, 0, 5, 9], [4, 1, 9, 3], [0, 10, 3, 3, 1, 1], [0, 12, 4, 2, 0, 1], [3, 0, 0, 6, 4, 2, 1, 1, 4], [1, 7, 0, 3, 11], [1, 9, 8, 1, 4], [0, 2, 2, 0, 7, 0, 0, 0, 0, 0, 5, 1, 0, 1, 2, 2, 0, 2], [0, 0, 0, 3, 2, 4, 4, 5, 5, 2], [0, 1, 4, 7, 0, 6, 0, 8, 1, 2], [1, 0, 1, 2, 6, 1, 9, 1, 2, 2, 1, 5, 7, 0, 0, 0, 2, 1, 4], [2, 1, 5, 6, 1, 7, 1, 3, 2, 0, 5, 11, 4, 0, 2, 3, 1, 1, 1], [0, 6, 6, 0, 6, 0, 0, 20, 3, 1, 9, 1, 4, 5, 1], [0, 0, 2, 4, 1, 3, 3, 0, 2, 2, 3, 6, 2, 1, 2, 0, 3, 10, 2, 0, 12, 2, 2, 2, 1], [7, 2, 4, 1, 4, 1, 2, 7, 4, 2, 2, 0, 3, 8, 4, 0, 2, 1, 3, 6, 3], [1, 0, 6, 2, 3, 4, 0, 7, 7, 2, 1, 0, 6, 6, 6, 0, 6, 0, 3, 4, 3], [6, 4, 3, 0, 3, 13, 0, 5, 8, 0, 5, 0, 0, 6, 2, 1, 8, 3, 0, 1, 2], [8, 3, 3, 1, 5, 6, 2, 7, 8, 1, 2, 0, 0, 9, 2, 0, 7, 6, 4, 4, 1], [6, 3, 8, 1, 7, 6, 4, 10, 12, 3, 4, 0, 2, 14], [6, 0, 1, 8, 5, 0, 5, 9, 3, 10, 4, 0, 4, 0, 1, 6, 3, 0, 10, 3, 3, 5, 0], [9, 1, 2, 0, 9, 8, 3, 9, 6, 0, 6, 0, 2, 11, 5, 1, 6, 3, 5, 0, 0], [0, 0, 1, 4, 3, 0, 4, 2, 6, 5, 3, 11, 7, 0, 1, 0, 3, 18, 2, 2, 5, 4, 3, 3, 1], [8, 2, 8, 0, 8, 5, 1, 8, 5, 2, 8, 0, 3, 18, 0, 0, 7, 8, 2, 0, 1], [5, 4, 8, 1, 9, 9, 3, 11, 14, 3, 4, 0, 5, 10, 1, 0, 9, 4, 4, 4, 0], [1, 0, 2, 4, 4, 2, 6, 2, 4, 8, 3, 11, 6, 0, 8, 0, 9, 15, 5, 1, 11, 5, 2, 3, 1]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

